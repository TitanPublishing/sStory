// Generated by CoffeeScript 1.6.2
var sStory;

sStory = (function() {
  function sStory(story_list) {
    var typeIsArray;

    this.story_list = story_list;
    typeIsArray = Array.isArray || function(value) {
      return {}.toString.call(value) === '[object Array]';
    };
    if (this.story_list === void 0) {
      throw "No story_list defined";
    }
    if (!typeIsArray(this.story_list)) {
      throw "The story_list is not an array";
    }
  }

  sStory.prototype.render = function() {
    var codeGist, codeTributary, locationSinglePlace, photoBigText, photoCaption, sections, soundSoundcloud, targetContainer, targetID, that, timelineVerite, videoVimeo, videoYoutube;

    targetID = "#content";
    targetContainer = d3.select(targetID);
    sections = targetContainer.selectAll("section").data(this.story_list).enter().append("section").attr('class', function(d) {
      return d.type;
    });
    photoBigText = targetContainer.selectAll('.photoBigText').attr('class', 'photoBigText photo').style("background-image", function(d) {
      return "url(" + d.photoUrl + ")";
    }).append("h2").text(function(d) {
      return d.title;
    });
    photoCaption = targetContainer.selectAll('.photoCaption').attr('class', 'photoCaption photo').style("background-image", function(d) {
      return "url(" + d.photoUrl + ")";
    });
    photoCaption.append("h2").text(function(d) {
      return d.title;
    });
    photoCaption.append("aside").attr("class", "caption").html(function(d) {
      return d.caption;
    });
    videoYoutube = targetContainer.selectAll(".videoYoutube").append("div").attr("class", "video-container").html(function(d) {
      return d.embedCode;
    });
    videoVimeo = targetContainer.selectAll(".videoVimeo").append("div").attr("class", "video-container").html(function(d) {
      return d.embedCode;
    });
    soundSoundcloud = targetContainer.selectAll(".soundSoundcloud").html(function(d) {
      return d.embedCode;
    });
    locationSinglePlace = targetContainer.selectAll(".locationSinglePlace").append("div").attr("class", "map").attr("data-address", function(d) {
      return d.address;
    }).attr("data-caption", function(d) {
      return d.caption;
    }).style("height", this.windowHeight);
    codeGist = targetContainer.selectAll(".codeGist").html(function(d) {
      var gistHtml, id;

      gistHtml = "";
      id = d.url.split('/')[4];
      $.get("https://api.github.com/gists/" + id, function(d) {
        console.log("JSON", d);
        return _.each(d.files, function(d) {
          gistHtml += "<h3>" + d.filename + "</h3>";
          return gistHtml += "<div class='content'>" + d.content + "</div>";
        });
      });
      return gistHtml;
    });
    codeTributary = targetContainer.selectAll(".codeTributary").append("iframe").attr("src", function(d) {
      return d.url;
    });
    timelineVerite = targetContainer.selectAll(".timelineVerite").append("div").attr("class", "timeline-container").html(function(d) {
      return d.embedCode;
    });
    this.handleWindowResize();
    that = this;
    $(window).on('resize', function() {
      return that.handleWindowResize();
    });
    this.renderMaps();
    this.makeNavSectionList();
    this.windowHeight = $(window).height();
    $('.photo').css('height', this.windowHeight);
    return this.story_list;
  };

  sStory.prototype.makeNavSectionList = function() {
    var $navlist;

    $navlist = $("#nav-section-list");
    $navlist.html("");
    return _.each(this.story_list, function(section, i) {
      var $link, $listItem;

      $link = $("<a></a>").attr("href", "#" + i).html(i + 1);
      $listItem = $("<li></li>").html($link);
      return $navlist.append($listItem);
    });
  };

  sStory.prototype.verticalCenterElement = function(el, parEl) {
    var elHeight, pageHeight;

    elHeight = el.innerHeight() / 2;
    pageHeight = parEl.innerHeight() / 2;
    return $(el).css({
      paddingTop: pageHeight - elHeight
    });
  };

  sStory.prototype.verticalCenterPhotoTitles = function() {
    var that;

    that = this;
    $(".photoBigText h2").each(function() {
      return that.verticalCenterElement($(this), $(this).parent());
    });
    return $(".photoCaption h2").each(function() {
      return that.verticalCenterElement($(this), $(this).parent());
    });
  };

  sStory.prototype.handleWindowResize = function() {
    var windowHeight;

    this.verticalCenterPhotoTitles();
    windowHeight = $(window).height();
    $(".photoBigText .photo-background").css({
      minHeight: windowHeight
    });
    return $(".photoCaption .photo-background").css({
      minHeight: windowHeight
    });
  };

  sStory.prototype.renderMaps = function() {
    var that;

    that = this;
    return $(".map").each(function() {
      var address, caption, geoCode, latLon, mapId;

      mapId = _.uniqueId("map_");
      $(this).attr("id", mapId);
      address = $(this).attr("data-address");
      caption = $(this).attr("data-caption");
      latLon = [];
      geoCode = that.geocodeLocationRequest(address);
      return geoCode.done(function(result) {
        var circle, layer, map;

        result = result[0];
        latLon = [result.lat, result.lon];
        map = L.map(mapId, {
          scrollWheelZoom: false
        }).setView(latLon, 14);
        layer = new L.StamenTileLayer("toner-lite");
        map.addLayer(layer);
        return circle = L.circle(latLon, 120, {
          color: 'red',
          fillColor: 'red',
          fillOpacity: 0.8,
          closeOnClick: false
        }).bindPopup(caption, {
          maxWidth: 600,
          maxHeight: 600,
          closeButton: false
        }).addTo(map).openPopup();
      });
    });
  };

  sStory.prototype.geocodeLocationRequest = function(location) {
    var addr, baseUrl, url;

    baseUrl = "http://open.mapquestapi.com/nominatim/v1/search.php?format=json";
    addr = "&q=" + location;
    url = encodeURI(baseUrl + addr + "&addressdetails=1&limit=1");
    return $.ajax({
      url: url,
      type: "GET",
      dataType: "json",
      cache: true
    });
  };

  return sStory;

})();
